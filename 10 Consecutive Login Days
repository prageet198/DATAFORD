LEVEL:-Hard
COMPANY:-Tiktok

QUESTION:-We have a table named user_login that records each user's daily login dates.

Write a SQL query to identify users who have logged in for at least 10 consecutive days. For each occurrence of such a pattern, 
display the user_id and the first date of these 10 consecutive days.

Example Scenario:

    If a user logs in on January 1st, 2nd, 3rd, and 4th, your query should list their user_id along with the start date of this sequence, which is January 1st.
    If the same user logs in for another set of 10 consecutive days at a different time, this new sequence should also be included in your query's output.
	
Table is:- user_login 

Solution:- In Postgre
WITH previousData AS(
SELECT user_id, login_date,
LAG(login_date,1) OVER (PARTITION BY user_id ORDER BY login_date) AS previousDay
FROM user_login
),
differences AS(
SELECT user_id, login_date, previousDay,
DATE_PART('day', login_date -  previousDay) AS dayDifference
FROM previousData
),
status AS (
SELECT user_id, login_date,
CASE WHEN dayDifference='1' OR daydifference IS NULL THEN 0
ELSE 1 END AS dayStatus
FROM differences
),
consecutiveGrops AS(
SELECT user_id, login_date, dayStatus,
SUM(dayStatus) OVER(PARTITION BY user_id ORDER BY login_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS consecutive_group
FROM status
),
totalDays AS (
SELECT user_id, consecutive_group, MIN(login_date) AS firstLoginDate, COUNT(*) AS totalDays
FROM consecutiveGrops
GROUP BY user_id, consecutive_group
HAVING COUNT(*)>='10'
)
SELECT user_id, firstLoginDate FROM totalDays

O/P OF consecutiveGrops:-
user_id	login_date	daystatus	consecutive_group
1001	01-01-2017 00:00	0	0
1001	02-01-2017 00:00	0	0
1001	04-01-2017 00:00	1	1
1001	05-01-2017 00:00	0	1
1001	06-01-2017 00:00	0	1
1001	07-01-2017 00:00	0	1
1001	08-01-2017 00:00	0	1
1001	09-01-2017 00:00	0	1
1001	10-01-2017 00:00	0	1
1001	12-01-2017 00:00	1	2
1001	13-01-2017 00:00	0	2
1001	15-01-2017 00:00	1	3
1001	16-01-2017 00:00	0	3
1002	01-01-2017 00:00	0	0
1002	02-01-2017 00:00	0	0
1002	03-01-2017 00:00	0	0
1002	04-01-2017 00:00	0	0
1002	05-01-2017 00:00	0	0
1002	06-01-2017 00:00	0	0
1002	07-01-2017 00:00	0	0
1002	08-01-2017 00:00	0	0
1002	09-01-2017 00:00	0	0
1002	10-01-2017 00:00	0	0
1002	11-01-2017 00:00	0	0
1002	12-01-2017 00:00	0	0
1002	13-01-2017 00:00	0	0
1002	16-01-2017 00:00	1	1
1002	17-01-2017 00:00	0	1
1003	01-01-2021 00:00	0	0
1003	02-01-2021 00:00	0	0
1003	03-01-2021 00:00	0	0
1003	04-01-2021 00:00	0	0
1003	05-01-2021 00:00	0	0
1003	09-01-2021 00:00	1	1
1003	10-01-2021 00:00	0	1
1003	11-01-2021 00:00	0	1
1003	12-01-2021 00:00	0	1
1003	13-01-2021 00:00	0	1
1003	14-01-2021 00:00	0	1
1003	15-01-2021 00:00	0	1
1003	16-01-2021 00:00	0	1
1003	17-01-2021 00:00	0	1
1003	18-01-2021 00:00	0	1
1003	19-01-2021 00:00	0	1
1003	20-01-2021 00:00	0	1
1003	21-01-2021 00:00	0	1
1004	01-04-2021 00:00	0	0
1004	02-04-2021 00:00	0	0
1004	03-05-2021 00:00	1	1
1004	04-05-2021 00:00	0	1
1004	05-05-2021 00:00	0	1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
